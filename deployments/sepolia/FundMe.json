{
  "address": "0x172121aFB15712fB7cD135593830E81a2e24bC97",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9add0f8cf98c004a046f75a88b6e73f4b03f371e252dff486852991820b51490",
  "receipt": {
    "to": null,
    "from": "0x9be0E1B346f3ddda162aEC4f21333C6757fB5723",
    "contractAddress": "0x172121aFB15712fB7cD135593830E81a2e24bC97",
    "transactionIndex": 16,
    "gasUsed": "850841",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x15277507c93664301dddb1b1c22fd020fe266b18471d177a743642dd87361d44",
    "transactionHash": "0x9add0f8cf98c004a046f75a88b6e73f4b03f371e252dff486852991820b51490",
    "logs": [],
    "blockNumber": 3551995,
    "cumulativeGasUsed": "2129054",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "21946358312072f709f7391e53a65961",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return priceFeed.version();\\n    // }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funder2 = funders;\\n        uint256 length = funder2.length;\\n        for (uint256 funderIndex = 0; funderIndex < length; funderIndex++) {\\n            address funder = funder2[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x3eccc360f8fb4576e5541fed9d0ba89578c151d1ad9732308f1122f42f606057\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xba918a103b14ca1392ca50ee2742d8b567aab1725de258ffbda6835e94b62044\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f5f380380610f5f83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610e0061015f600039600081816102e501526105da0152610e006000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610812565b61058d565b6040516100d89190610858565b60405180910390f35b3480156100ed57600080fd5b506100f66105a5565b6040516101039190610858565b60405180910390f35b34801561011857600080fd5b506101216105b2565b60405161012e91906108d2565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105d8565b60405161016391906108fc565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610943565b6105fc565b6040516101a091906108fc565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063b90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109cd565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a1c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103a2575b5050505050905060008151905060005b8181101561047b57600083828151811061041957610418610a50565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047390610a7f565b9150506103fc565b50600067ffffffffffffffff81111561049757610496610ac7565b5b6040519080825280602002602001820160405280156104c55781602001602082028036833780820191505090505b50600190805190602001906104db929190610708565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050290610b27565b60006040518083038185875af1925050503d806000811461053f576040519150601f19603f3d011682016040523d82523d6000602084013e610544565b606091505b5050905080610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f90610b88565b60405180910390fd5b505050565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061060c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064783610677565b90506000670de0b6b3a764000085836106609190610ba8565b61066a9190610c19565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190610cd7565b5050509150506402540be400816107009190610d52565b915050919050565b828054828255906000526020600020908101928215610781579160200282015b828111156107805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610728565b5b50905061078e9190610792565b5090565b5b808211156107ab576000816000905550600101610793565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107df826107b4565b9050919050565b6107ef816107d4565b81146107fa57600080fd5b50565b60008135905061080c816107e6565b92915050565b600060208284031215610828576108276107af565b5b6000610836848285016107fd565b91505092915050565b6000819050919050565b6108528161083f565b82525050565b600060208201905061086d6000830184610849565b92915050565b6000819050919050565b600061089861089361088e846107b4565b610873565b6107b4565b9050919050565b60006108aa8261087d565b9050919050565b60006108bc8261089f565b9050919050565b6108cc816108b1565b82525050565b60006020820190506108e760008301846108c3565b92915050565b6108f6816107d4565b82525050565b600060208201905061091160008301846108ed565b92915050565b6109208161083f565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b600060208284031215610959576109586107af565b5b60006109678482850161092e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b7601b83610970565b91506109c282610981565b602082019050919050565b600060208201905081810360008301526109e6816109aa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a278261083f565b9150610a328361083f565b9250828201905080821115610a4a57610a496109ed565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a8a8261083f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610abc57610abb6109ed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b11600083610af6565b9150610b1c82610b01565b600082019050919050565b6000610b3282610b04565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b72600b83610970565b9150610b7d82610b3c565b602082019050919050565b60006020820190508181036000830152610ba181610b65565b9050919050565b6000610bb38261083f565b9150610bbe8361083f565b9250828202610bcc8161083f565b91508282048414831517610be357610be26109ed565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c248261083f565b9150610c2f8361083f565b925082610c3f57610c3e610bea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6981610c4a565b8114610c7457600080fd5b50565b600081519050610c8681610c60565b92915050565b6000819050919050565b610c9f81610c8c565b8114610caa57600080fd5b50565b600081519050610cbc81610c96565b92915050565b600081519050610cd181610917565b92915050565b600080600080600060a08688031215610cf357610cf26107af565b5b6000610d0188828901610c77565b9550506020610d1288828901610cad565b9450506040610d2388828901610cc2565b9350506060610d3488828901610cc2565b9250506080610d4588828901610c77565b9150509295509295909350565b6000610d5d82610c8c565b9150610d6883610c8c565b9250828202610d7681610c8c565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dae57610dad6109ed565b5b8282058414831517610dc357610dc26109ed565b5b509291505056fea2646970667358221220ec7b1c69c3ca06e145451cf1278cd62eca27a60121515c46d75a4b3ced8924a564736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610812565b61058d565b6040516100d89190610858565b60405180910390f35b3480156100ed57600080fd5b506100f66105a5565b6040516101039190610858565b60405180910390f35b34801561011857600080fd5b506101216105b2565b60405161012e91906108d2565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105d8565b60405161016391906108fc565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610943565b6105fc565b6040516101a091906108fc565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063b90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109cd565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a1c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103a2575b5050505050905060008151905060005b8181101561047b57600083828151811061041957610418610a50565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047390610a7f565b9150506103fc565b50600067ffffffffffffffff81111561049757610496610ac7565b5b6040519080825280602002602001820160405280156104c55781602001602082028036833780820191505090505b50600190805190602001906104db929190610708565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050290610b27565b60006040518083038185875af1925050503d806000811461053f576040519150601f19603f3d011682016040523d82523d6000602084013e610544565b606091505b5050905080610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f90610b88565b60405180910390fd5b505050565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061060c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064783610677565b90506000670de0b6b3a764000085836106609190610ba8565b61066a9190610c19565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190610cd7565b5050509150506402540be400816107009190610d52565b915050919050565b828054828255906000526020600020908101928215610781579160200282015b828111156107805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610728565b5b50905061078e9190610792565b5090565b5b808211156107ab576000816000905550600101610793565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107df826107b4565b9050919050565b6107ef816107d4565b81146107fa57600080fd5b50565b60008135905061080c816107e6565b92915050565b600060208284031215610828576108276107af565b5b6000610836848285016107fd565b91505092915050565b6000819050919050565b6108528161083f565b82525050565b600060208201905061086d6000830184610849565b92915050565b6000819050919050565b600061089861089361088e846107b4565b610873565b6107b4565b9050919050565b60006108aa8261087d565b9050919050565b60006108bc8261089f565b9050919050565b6108cc816108b1565b82525050565b60006020820190506108e760008301846108c3565b92915050565b6108f6816107d4565b82525050565b600060208201905061091160008301846108ed565b92915050565b6109208161083f565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b600060208284031215610959576109586107af565b5b60006109678482850161092e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b7601b83610970565b91506109c282610981565b602082019050919050565b600060208201905081810360008301526109e6816109aa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a278261083f565b9150610a328361083f565b9250828201905080821115610a4a57610a496109ed565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a8a8261083f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610abc57610abb6109ed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b11600083610af6565b9150610b1c82610b01565b600082019050919050565b6000610b3282610b04565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b72600b83610970565b9150610b7d82610b3c565b602082019050919050565b60006020820190508181036000830152610ba181610b65565b9050919050565b6000610bb38261083f565b9150610bbe8361083f565b9250828202610bcc8161083f565b91508282048414831517610be357610be26109ed565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c248261083f565b9150610c2f8361083f565b925082610c3f57610c3e610bea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6981610c4a565b8114610c7457600080fd5b50565b600081519050610c8681610c60565b92915050565b6000819050919050565b610c9f81610c8c565b8114610caa57600080fd5b50565b600081519050610cbc81610c96565b92915050565b600081519050610cd181610917565b92915050565b600080600080600060a08688031215610cf357610cf26107af565b5b6000610d0188828901610c77565b9550506020610d1288828901610cad565b9450506040610d2388828901610cc2565b9350506060610d3488828901610cc2565b9250506080610d4588828901610c77565b9150509295509295909350565b6000610d5d82610c8c565b9150610d6883610c8c565b9250828202610d7681610c8c565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dae57610dad6109ed565b5b8282058414831517610dc357610dc26109ed565b5b509291505056fea2646970667358221220ec7b1c69c3ca06e145451cf1278cd62eca27a60121515c46d75a4b3ced8924a564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}